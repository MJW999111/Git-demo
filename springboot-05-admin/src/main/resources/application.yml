spring:
  datasource:
    url: jdbc:mysql://localhost:3306/mybatis_plus
    username: root
    password: root
    driver-class-name: com.mysql.jdbc.Driver



    druid:
      filters: stat,wall,slf4j    #监控防火墙功能 stat(sql监控) wall(防火墙)
      aop-patterns: com.gg.*   #监控springBean 功能
      stat-view-servlet:     #配置监控页功能
        enabled: true
        #监控页的登录
        login-username: admin
        login-password: admin
        reset-enable: false

      #web监控功能
      web-stat-filter:
        enabled: true
        url-pattern: /*
        exclusions: "*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*"


      filter:
        #对上面filters里面得state和wall 得详细配置
        stat:
          slow-sql-millis: 1000
          log-slow-sql: true
          enabled: true
        wall:
          enabled: true
          config:
            drop-table-allow: false

  jdbc:
    template:
      query-timeout: 10




# 配置mybatis规则
# 可以 不写mybatis配置文件 ：可以不写全局，所有全局配置文件的配置都在configuration下:  推荐使用这种方式

mybatis:
  #config-location: classpath:mybatis/mybatis.xml  #全局配置文件位置


  #sql配置文件位置
  mapper-locations: classpath:mybatis/mapper/*.xml
  #指定mybatis全局配置文件中的相关配置
  configuration:
    #开启mybatis 驼峰命名模式
    map-underscore-to-camel-case: true


#management:  是所有actuator的配置
management:
  endpoints:
    enabled-by-default: true    #默认开启所有监控端点  默认是true
    web:
      exposure:
        include: '*'   #以web方式暴露所有端点

  endpoint:
    health:
      show-details: always
